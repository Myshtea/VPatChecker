/**
 * generated by Xtext 2.29.0
 */
package fr.lcis.castav.vpat.vPAT.impl;

import fr.lcis.castav.vpat.vPAT.Source;
import fr.lcis.castav.vpat.vPAT.VPATPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Source</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.lcis.castav.vpat.vPAT.impl.SourceImpl#isAnyPrivate <em>Any Private</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SourceImpl extends InflowImpl implements Source
{
  /**
   * The default value of the '{@link #isAnyPrivate() <em>Any Private</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAnyPrivate()
   * @generated
   * @ordered
   */
  protected static final boolean ANY_PRIVATE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAnyPrivate() <em>Any Private</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAnyPrivate()
   * @generated
   * @ordered
   */
  protected boolean anyPrivate = ANY_PRIVATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VPATPackage.Literals.SOURCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isAnyPrivate()
  {
    return anyPrivate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAnyPrivate(boolean newAnyPrivate)
  {
    boolean oldAnyPrivate = anyPrivate;
    anyPrivate = newAnyPrivate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VPATPackage.SOURCE__ANY_PRIVATE, oldAnyPrivate, anyPrivate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VPATPackage.SOURCE__ANY_PRIVATE:
        return isAnyPrivate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VPATPackage.SOURCE__ANY_PRIVATE:
        setAnyPrivate((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VPATPackage.SOURCE__ANY_PRIVATE:
        setAnyPrivate(ANY_PRIVATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VPATPackage.SOURCE__ANY_PRIVATE:
        return anyPrivate != ANY_PRIVATE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (anyPrivate: ");
    result.append(anyPrivate);
    result.append(')');
    return result.toString();
  }

} //SourceImpl
