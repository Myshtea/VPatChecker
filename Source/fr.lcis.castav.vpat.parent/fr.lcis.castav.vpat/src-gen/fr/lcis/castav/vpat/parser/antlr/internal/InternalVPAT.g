/*
 * generated by Xtext 2.29.0
 */
grammar InternalVPAT;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.lcis.castav.vpat.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.lcis.castav.vpat.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.lcis.castav.vpat.services.VPATGrammarAccess;

}

@parser::members {

 	private VPATGrammarAccess grammarAccess;

    public InternalVPATParser(TokenStream input, VPATGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Vulnerability";
   	}

   	@Override
   	protected VPATGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleVulnerability
entryRuleVulnerability returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVulnerabilityRule()); }
	iv_ruleVulnerability=ruleVulnerability
	{ $current=$iv_ruleVulnerability.current; }
	EOF;

// Rule Vulnerability
ruleVulnerability returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVulnerabilityAccess().getVulnerabilityAction_0(),
					$current);
			}
		)
		otherlv_1='Vulnerability'
		{
			newLeafNode(otherlv_1, grammarAccess.getVulnerabilityAccess().getVulnerabilityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVulnerabilityAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVulnerabilityRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.lcis.castav.vpat.VPAT.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getVulnerabilityAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getVulnerabilityAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVulnerabilityAccess().getDescriptionEStringParserRuleCall_4_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVulnerabilityRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"fr.lcis.castav.vpat.VPAT.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='context'
			{
				newLeafNode(otherlv_6, grammarAccess.getVulnerabilityAccess().getContextKeyword_5_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getVulnerabilityAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVulnerabilityAccess().getContextContextParserRuleCall_5_2_0());
					}
					lv_context_8_0=ruleContext
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVulnerabilityRule());
						}
						add(
							$current,
							"context",
							lv_context_8_0,
							"fr.lcis.castav.vpat.VPAT.Context");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getVulnerabilityAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVulnerabilityAccess().getContextContextParserRuleCall_5_3_1_0());
						}
						lv_context_10_0=ruleContext
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVulnerabilityRule());
							}
							add(
								$current,
								"context",
								lv_context_10_0,
								"fr.lcis.castav.vpat.VPAT.Context");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getVulnerabilityAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_12='function'
			{
				newLeafNode(otherlv_12, grammarAccess.getVulnerabilityAccess().getFunctionKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getVulnerabilityAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{ 
					  getUnorderedGroupHelper().enter(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2());
					}
					(
						(
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2(), 0)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2(), 0);
						}
									({true}?=>(otherlv_15='main'
									{
										newLeafNode(otherlv_15, grammarAccess.getVulnerabilityAccess().getMainKeyword_6_2_0_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getVulnerabilityAccess().getMainFunctionSinkParserRuleCall_6_2_0_1_0());
											}
											lv_mainFunction_16_0=ruleSink
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getVulnerabilityRule());
												}
												set(
													$current,
													"mainFunction",
													lv_mainFunction_16_0,
													"fr.lcis.castav.vpat.VPAT.Sink");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2(), 1)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2(), 1);
						}
									({true}?=>(otherlv_17=','
									{
										newLeafNode(otherlv_17, grammarAccess.getVulnerabilityAccess().getCommaKeyword_6_2_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getVulnerabilityAccess().getFunctionFunctionParserRuleCall_6_2_1_1_0());
											}
											lv_function_18_0=ruleFunction
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getVulnerabilityRule());
												}
												add(
													$current,
													"function",
													lv_function_18_0,
													"fr.lcis.castav.vpat.VPAT.Function");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))+
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2());
						}
					)
				)
						)+
						{getUnorderedGroupHelper().canLeave(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2())}?
					)
				)
					{ 
					  getUnorderedGroupHelper().leave(grammarAccess.getVulnerabilityAccess().getUnorderedGroup_6_2());
					}
			)
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getVulnerabilityAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getVulnerabilityAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_Permission_0_0='android.permission.'
					{
						newLeafNode(lv_Permission_0_0, grammarAccess.getContextAccess().getPermissionAndroidPermissionKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContextRule());
						}
						setWithLastConsumed($current, "Permission", lv_Permission_0_0 != null, "android.permission.");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getContextAccess().getValuePermissionParserRuleCall_0_1_0());
					}
					lv_value_1_0=rulePermission
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextRule());
						}
						set(
							$current,
							"value",
							lv_value_1_0,
							"fr.lcis.castav.vpat.VPAT.Permission");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_Network_2_0='network'
					{
						newLeafNode(lv_Network_2_0, grammarAccess.getContextAccess().getNetworkNetworkKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContextRule());
						}
						setWithLastConsumed($current, "Network", lv_Network_2_0 != null, "network");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getContextAccess().getValueNetworkParserRuleCall_1_1_0());
					}
					lv_value_3_0=ruleNetwork
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"fr.lcis.castav.vpat.VPAT.Network");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_Version_4_0='apiversion'
					{
						newLeafNode(lv_Version_4_0, grammarAccess.getContextAccess().getVersionApiversionKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContextRule());
						}
						setWithLastConsumed($current, "Version", lv_Version_4_0 != null, "apiversion");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getContextAccess().getValueVersionParserRuleCall_2_1_0());
					}
					lv_value_5_0=ruleVersion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"fr.lcis.castav.vpat.VPAT.Version");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current; }
	EOF;

// Rule Version
ruleVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVersionAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVersionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRulePermission
entryRulePermission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPermissionRule()); }
	iv_rulePermission=rulePermission
	{ $current=$iv_rulePermission.current; }
	EOF;

// Rule Permission
rulePermission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPermissionAccess().getPermissionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPermissionAccess().getNamePermissionIDParserRuleCall_1_0());
				}
				lv_name_1_0=rulepermissionID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPermissionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.lcis.castav.vpat.VPAT.permissionID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulepermissionID
entryRulepermissionID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPermissionIDRule()); }
	iv_rulepermissionID=rulepermissionID
	{ $current=$iv_rulepermissionID.current; }
	EOF;

// Rule permissionID
rulepermissionID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='ACCESS_MEDIA_LOCATION'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPermissionIDAccess().getNameACCESS_MEDIA_LOCATIONKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermissionIDRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "ACCESS_MEDIA_LOCATION");
				}
			)
		)
		    |
		(
			(
				lv_name_1_0='ACCESS_NETWORK_STATE'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPermissionIDAccess().getNameACCESS_NETWORK_STATEKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermissionIDRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "ACCESS_NETWORK_STATE");
				}
			)
		)
		    |
		(
			(
				lv_name_2_0='ACCESS_WIFI_STATE'
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPermissionIDAccess().getNameACCESS_WIFI_STATEKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermissionIDRule());
					}
					setWithLastConsumed($current, "name", lv_name_2_0, "ACCESS_WIFI_STATE");
				}
			)
		)
		    |
		(
			(
				lv_name_3_0='INTERNET'
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPermissionIDAccess().getNameINTERNETKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermissionIDRule());
					}
					setWithLastConsumed($current, "name", lv_name_3_0, "INTERNET");
				}
			)
		)
	)
;

// Entry rule entryRuleNetwork
entryRuleNetwork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkRule()); }
	iv_ruleNetwork=ruleNetwork
	{ $current=$iv_ruleNetwork.current; }
	EOF;

// Rule Network
ruleNetwork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNetworkAccess().getNetworkAction_0(),
					$current);
			}
		)
		otherlv_1='default'
		{
			newLeafNode(otherlv_1, grammarAccess.getNetworkAccess().getDefaultKeyword_1());
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getSinkParserRuleCall_0());
		}
		this_Sink_0=ruleSink
		{
			$current = $this_Sink_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getInflowParserRuleCall_1());
		}
		this_Inflow_1=ruleInflow
		{
			$current = $this_Inflow_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSink
entryRuleSink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSinkRule()); }
	iv_ruleSink=ruleSink
	{ $current=$iv_ruleSink.current; }
	EOF;

// Rule Sink
ruleSink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sink'
		{
			newLeafNode(otherlv_0, grammarAccess.getSinkAccess().getSinkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSinkAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSinkRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.lcis.castav.vpat.VPAT.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSinkAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='parameter'
			{
				newLeafNode(otherlv_3, grammarAccess.getSinkAccess().getParameterKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getSinkAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSinkAccess().getParameterParameterParserRuleCall_3_2_0());
					}
					lv_parameter_5_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSinkRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_5_0,
							"fr.lcis.castav.vpat.VPAT.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getSinkAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSinkAccess().getParameterParameterParserRuleCall_3_3_1_0());
						}
						lv_parameter_7_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSinkRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_7_0,
								"fr.lcis.castav.vpat.VPAT.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getSinkAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSinkAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterAccess().getOriginFunctionCrossReference_0_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_static_1_0='static'
					{
						newLeafNode(lv_static_1_0, grammarAccess.getParameterAccess().getStaticStaticKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterRule());
						}
						setWithLastConsumed($current, "static", lv_static_1_0 != null, "static");
					}
				)
			)
			(
				(
					(
						lv_anyValue_2_0='*'
						{
							newLeafNode(lv_anyValue_2_0, grammarAccess.getParameterAccess().getAnyValueAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParameterRule());
							}
							setWithLastConsumed($current, "anyValue", lv_anyValue_2_0 != null, "*");
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_1_1_1_0());
						}
						lv_value_3_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"value",
								lv_value_3_0,
								"fr.lcis.castav.vpat.VPAT.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleInflow
entryRuleInflow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInflowRule()); }
	iv_ruleInflow=ruleInflow
	{ $current=$iv_ruleInflow.current; }
	EOF;

// Rule Inflow
ruleInflow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInflowAccess().getSourceParserRuleCall_0());
		}
		this_Source_0=ruleSource
		{
			$current = $this_Source_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInflowAccess().getInputParserRuleCall_1());
		}
		this_Input_1=ruleInput
		{
			$current = $this_Input_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	iv_ruleSource=ruleSource
	{ $current=$iv_ruleSource.current; }
	EOF;

// Rule Source
ruleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSourceAccess().getSourceAction_0(),
					$current);
			}
		)
		otherlv_1='Source'
		{
			newLeafNode(otherlv_1, grammarAccess.getSourceAccess().getSourceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.lcis.castav.vpat.VPAT.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_anyPrivate_3_0='*'
					{
						newLeafNode(lv_anyPrivate_3_0, grammarAccess.getSourceAccess().getAnyPrivateAsteriskKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSourceRule());
						}
						setWithLastConsumed($current, "anyPrivate", lv_anyPrivate_3_0 != null, "*");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getMethodEStringParserRuleCall_3_1_0());
					}
					lv_method_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"method",
							lv_method_4_0,
							"fr.lcis.castav.vpat.VPAT.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInputAccess().getInputAction_0(),
					$current);
			}
		)
		otherlv_1='Input'
		{
			newLeafNode(otherlv_1, grammarAccess.getInputAccess().getInputKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.lcis.castav.vpat.VPAT.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getMethodEStringParserRuleCall_3_0());
				}
				lv_method_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					set(
						$current,
						"method",
						lv_method_3_0,
						"fr.lcis.castav.vpat.VPAT.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFQNAccess().getEStringParserRuleCall_0());
		}
		this_EString_0=ruleEString
		{
			$current.merge(this_EString_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getFQNAccess().getEStringParserRuleCall_1_1());
			}
			this_EString_2=ruleEString
			{
				$current.merge(this_EString_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
