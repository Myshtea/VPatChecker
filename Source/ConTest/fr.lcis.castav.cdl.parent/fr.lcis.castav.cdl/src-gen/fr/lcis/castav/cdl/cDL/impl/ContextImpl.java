/**
 * generated by Xtext 2.29.0
 */
package fr.lcis.castav.cdl.cDL.impl;

import fr.lcis.castav.cdl.cDL.CDLPackage;
import fr.lcis.castav.cdl.cDL.Context;
import fr.lcis.castav.cdl.cDL.ContextMapping;
import fr.lcis.castav.cdl.cDL.Property;
import fr.lcis.castav.cdl.cDL.Provider;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Context</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#isStatic <em>Static</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#isDerived <em>Derived</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#getDerives <em>Derives</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#getProviders <em>Providers</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.impl.ContextImpl#getMappings <em>Mappings</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContextImpl extends MinimalEObjectImpl.Container implements Context
{
  /**
   * The default value of the '{@link #isStatic() <em>Static</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStatic()
   * @generated
   * @ordered
   */
  protected static final boolean STATIC_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStatic() <em>Static</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStatic()
   * @generated
   * @ordered
   */
  protected boolean static_ = STATIC_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isDerived() <em>Derived</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDerived()
   * @generated
   * @ordered
   */
  protected static final boolean DERIVED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDerived() <em>Derived</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDerived()
   * @generated
   * @ordered
   */
  protected boolean derived = DERIVED_EDEFAULT;

  /**
   * The cached value of the '{@link #getDerives() <em>Derives</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDerives()
   * @generated
   * @ordered
   */
  protected EList<Context> derives;

  /**
   * The cached value of the '{@link #getProviders() <em>Providers</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProviders()
   * @generated
   * @ordered
   */
  protected EList<Provider> providers;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<Property> properties;

  /**
   * The cached value of the '{@link #getMappings() <em>Mappings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMappings()
   * @generated
   * @ordered
   */
  protected EList<ContextMapping> mappings;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContextImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CDLPackage.Literals.CONTEXT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isStatic()
  {
    return static_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatic(boolean newStatic)
  {
    boolean oldStatic = static_;
    static_ = newStatic;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CDLPackage.CONTEXT__STATIC, oldStatic, static_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CDLPackage.CONTEXT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDerived()
  {
    return derived;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDerived(boolean newDerived)
  {
    boolean oldDerived = derived;
    derived = newDerived;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CDLPackage.CONTEXT__DERIVED, oldDerived, derived));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Context> getDerives()
  {
    if (derives == null)
    {
      derives = new EObjectResolvingEList<Context>(Context.class, this, CDLPackage.CONTEXT__DERIVES);
    }
    return derives;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Provider> getProviders()
  {
    if (providers == null)
    {
      providers = new EObjectResolvingEList<Provider>(Provider.class, this, CDLPackage.CONTEXT__PROVIDERS);
    }
    return providers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Property> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<Property>(Property.class, this, CDLPackage.CONTEXT__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ContextMapping> getMappings()
  {
    if (mappings == null)
    {
      mappings = new EObjectContainmentEList<ContextMapping>(ContextMapping.class, this, CDLPackage.CONTEXT__MAPPINGS);
    }
    return mappings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CDLPackage.CONTEXT__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
      case CDLPackage.CONTEXT__MAPPINGS:
        return ((InternalEList<?>)getMappings()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CDLPackage.CONTEXT__STATIC:
        return isStatic();
      case CDLPackage.CONTEXT__NAME:
        return getName();
      case CDLPackage.CONTEXT__DERIVED:
        return isDerived();
      case CDLPackage.CONTEXT__DERIVES:
        return getDerives();
      case CDLPackage.CONTEXT__PROVIDERS:
        return getProviders();
      case CDLPackage.CONTEXT__PROPERTIES:
        return getProperties();
      case CDLPackage.CONTEXT__MAPPINGS:
        return getMappings();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CDLPackage.CONTEXT__STATIC:
        setStatic((Boolean)newValue);
        return;
      case CDLPackage.CONTEXT__NAME:
        setName((String)newValue);
        return;
      case CDLPackage.CONTEXT__DERIVED:
        setDerived((Boolean)newValue);
        return;
      case CDLPackage.CONTEXT__DERIVES:
        getDerives().clear();
        getDerives().addAll((Collection<? extends Context>)newValue);
        return;
      case CDLPackage.CONTEXT__PROVIDERS:
        getProviders().clear();
        getProviders().addAll((Collection<? extends Provider>)newValue);
        return;
      case CDLPackage.CONTEXT__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends Property>)newValue);
        return;
      case CDLPackage.CONTEXT__MAPPINGS:
        getMappings().clear();
        getMappings().addAll((Collection<? extends ContextMapping>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CDLPackage.CONTEXT__STATIC:
        setStatic(STATIC_EDEFAULT);
        return;
      case CDLPackage.CONTEXT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CDLPackage.CONTEXT__DERIVED:
        setDerived(DERIVED_EDEFAULT);
        return;
      case CDLPackage.CONTEXT__DERIVES:
        getDerives().clear();
        return;
      case CDLPackage.CONTEXT__PROVIDERS:
        getProviders().clear();
        return;
      case CDLPackage.CONTEXT__PROPERTIES:
        getProperties().clear();
        return;
      case CDLPackage.CONTEXT__MAPPINGS:
        getMappings().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CDLPackage.CONTEXT__STATIC:
        return static_ != STATIC_EDEFAULT;
      case CDLPackage.CONTEXT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CDLPackage.CONTEXT__DERIVED:
        return derived != DERIVED_EDEFAULT;
      case CDLPackage.CONTEXT__DERIVES:
        return derives != null && !derives.isEmpty();
      case CDLPackage.CONTEXT__PROVIDERS:
        return providers != null && !providers.isEmpty();
      case CDLPackage.CONTEXT__PROPERTIES:
        return properties != null && !properties.isEmpty();
      case CDLPackage.CONTEXT__MAPPINGS:
        return mappings != null && !mappings.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (static: ");
    result.append(static_);
    result.append(", name: ");
    result.append(name);
    result.append(", derived: ");
    result.append(derived);
    result.append(')');
    return result.toString();
  }

} //ContextImpl
