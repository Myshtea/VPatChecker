/**
 * generated by Xtext 2.29.0
 */
package fr.lcis.castav.cdl.cDL;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Context Mapping</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link fr.lcis.castav.cdl.cDL.ContextMapping#getRef <em>Ref</em>}</li>
 *   <li>{@link fr.lcis.castav.cdl.cDL.ContextMapping#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @see fr.lcis.castav.cdl.cDL.CDLPackage#getContextMapping()
 * @model
 * @generated
 */
public interface ContextMapping extends EObject
{
  /**
   * Returns the value of the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Ref</em>' reference.
   * @see #setRef(ContextValue)
   * @see fr.lcis.castav.cdl.cDL.CDLPackage#getContextMapping_Ref()
   * @model
   * @generated
   */
  ContextValue getRef();

  /**
   * Sets the value of the '{@link fr.lcis.castav.cdl.cDL.ContextMapping#getRef <em>Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Ref</em>' reference.
   * @see #getRef()
   * @generated
   */
  void setRef(ContextValue value);

  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(ContextExpression)
   * @see fr.lcis.castav.cdl.cDL.CDLPackage#getContextMapping_Expression()
   * @model containment="true"
   * @generated
   */
  ContextExpression getExpression();

  /**
   * Sets the value of the '{@link fr.lcis.castav.cdl.cDL.ContextMapping#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(ContextExpression value);

} // ContextMapping
