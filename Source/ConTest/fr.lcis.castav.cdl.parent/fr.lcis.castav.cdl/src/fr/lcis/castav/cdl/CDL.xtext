grammar fr.lcis.castav.cdl.CDL with org.eclipse.xtext.common.Terminals

generate cDL "http://www.lcis.fr/castav/cdl/CDL"

ContextModel:
	"contextModel" name=ID '{'
		Contexts+=Context* &
		Providers+=Providers* &
		Situations+=Situation* &
		Types+=DefinedType*
	'}'
;
	
Context:
	(static?='static')? 'context' name=ID (derived?='derives' derives+=[Context] (',' derives+=[Context] )*)? '{'
		('providers' ':' '[' providers+=[Provider] (',' providers+=[Provider])* ']' ',')?
		'properties' ':' '[' properties+=Property (',' properties+=Property)* ']' 
		(',' ('mappings') ':' '{'
			 mappings+=ContextMapping (',' mappings+=ContextMapping)*
		'}')?
	'}'
;

ContextMapping:
	ref=[ContextValue|FQN] '->' expression=ContextExpression
;


Providers: 'providers' '{'
		providers+=Provider (',' providers+=Provider)*
	'}'
;

Provider:
	name=ID 
;

Property:
	name=ID ':' type=(TypeRef|SimpleType)
;

TypeRef: 
	ref=[DefinedType|ID]
;

DefinedType:
	'type' name=ID '{'
		values+=ContextValue (',' values+=ContextValue)*
	'}'
;

ContextValue:
	name=(STRING | ID)
;

SimpleType:
	StringType | IntegerType | BooleanType | DoubleType
;

StringType:
	{StringType} "string"
;
IntegerType:
	{IntegerType} "integer"
;
BooleanType:
	{BooleanType} "boolean"
;
DoubleType:
	{DoubleType} "double"
;

Situation:	
	'situation' name=ID '{'
		expression+=ContextExpression	
	'}'
;

ContextExpression:
	ref=[Property|FQN] ('<' | '>' | '>=' | '<=' | '==' | '!=') value=ContextValue (('and' | 'or') expr=ContextExpression)?
;

FQN hidden(): ID('.' ID)*;