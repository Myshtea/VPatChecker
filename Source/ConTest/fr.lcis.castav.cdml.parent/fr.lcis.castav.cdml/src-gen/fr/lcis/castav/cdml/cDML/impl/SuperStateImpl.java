/**
 * generated by Xtext 2.29.0
 */
package fr.lcis.castav.cdml.cDML.impl;

import fr.lcis.castav.cdml.cDML.CDMLPackage;
import fr.lcis.castav.cdml.cDML.Statemachine;
import fr.lcis.castav.cdml.cDML.SuperState;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Super State</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.SuperStateImpl#getAbstracts <em>Abstracts</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SuperStateImpl extends StateImpl implements SuperState
{
  /**
   * The cached value of the '{@link #getAbstracts() <em>Abstracts</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstracts()
   * @generated
   * @ordered
   */
  protected Statemachine abstracts;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SuperStateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CDMLPackage.Literals.SUPER_STATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Statemachine getAbstracts()
  {
    if (abstracts != null && abstracts.eIsProxy())
    {
      InternalEObject oldAbstracts = (InternalEObject)abstracts;
      abstracts = (Statemachine)eResolveProxy(oldAbstracts);
      if (abstracts != oldAbstracts)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CDMLPackage.SUPER_STATE__ABSTRACTS, oldAbstracts, abstracts));
      }
    }
    return abstracts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Statemachine basicGetAbstracts()
  {
    return abstracts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAbstracts(Statemachine newAbstracts)
  {
    Statemachine oldAbstracts = abstracts;
    abstracts = newAbstracts;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CDMLPackage.SUPER_STATE__ABSTRACTS, oldAbstracts, abstracts));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CDMLPackage.SUPER_STATE__ABSTRACTS:
        if (resolve) return getAbstracts();
        return basicGetAbstracts();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CDMLPackage.SUPER_STATE__ABSTRACTS:
        setAbstracts((Statemachine)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CDMLPackage.SUPER_STATE__ABSTRACTS:
        setAbstracts((Statemachine)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CDMLPackage.SUPER_STATE__ABSTRACTS:
        return abstracts != null;
    }
    return super.eIsSet(featureID);
  }

} //SuperStateImpl
