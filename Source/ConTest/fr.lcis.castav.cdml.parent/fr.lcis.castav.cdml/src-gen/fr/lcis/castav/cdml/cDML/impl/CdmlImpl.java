/**
 * generated by Xtext 2.29.0
 */
package fr.lcis.castav.cdml.cDML.impl;

import fr.lcis.castav.cdml.cDML.Adaptation;
import fr.lcis.castav.cdml.cDML.CDMLPackage;
import fr.lcis.castav.cdml.cDML.Cdml;
import fr.lcis.castav.cdml.cDML.Contexts;
import fr.lcis.castav.cdml.cDML.Situations;
import fr.lcis.castav.cdml.cDML.Statemachine;
import fr.lcis.castav.cdml.cDML.StaticContexts;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cdml</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.CdmlImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.CdmlImpl#getContexts <em>Contexts</em>}</li>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.CdmlImpl#getStaticContexts <em>Static Contexts</em>}</li>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.CdmlImpl#getSituations <em>Situations</em>}</li>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.CdmlImpl#getStatemachines <em>Statemachines</em>}</li>
 *   <li>{@link fr.lcis.castav.cdml.cDML.impl.CdmlImpl#getAdaptations <em>Adaptations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CdmlImpl extends MinimalEObjectImpl.Container implements Cdml
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getContexts() <em>Contexts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContexts()
   * @generated
   * @ordered
   */
  protected EList<Contexts> contexts;

  /**
   * The cached value of the '{@link #getStaticContexts() <em>Static Contexts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStaticContexts()
   * @generated
   * @ordered
   */
  protected EList<StaticContexts> staticContexts;

  /**
   * The cached value of the '{@link #getSituations() <em>Situations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSituations()
   * @generated
   * @ordered
   */
  protected EList<Situations> situations;

  /**
   * The cached value of the '{@link #getStatemachines() <em>Statemachines</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatemachines()
   * @generated
   * @ordered
   */
  protected EList<Statemachine> statemachines;

  /**
   * The cached value of the '{@link #getAdaptations() <em>Adaptations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdaptations()
   * @generated
   * @ordered
   */
  protected EList<Adaptation> adaptations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CdmlImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CDMLPackage.Literals.CDML;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CDMLPackage.CDML__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Contexts> getContexts()
  {
    if (contexts == null)
    {
      contexts = new EObjectContainmentEList<Contexts>(Contexts.class, this, CDMLPackage.CDML__CONTEXTS);
    }
    return contexts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StaticContexts> getStaticContexts()
  {
    if (staticContexts == null)
    {
      staticContexts = new EObjectContainmentEList<StaticContexts>(StaticContexts.class, this, CDMLPackage.CDML__STATIC_CONTEXTS);
    }
    return staticContexts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Situations> getSituations()
  {
    if (situations == null)
    {
      situations = new EObjectContainmentEList<Situations>(Situations.class, this, CDMLPackage.CDML__SITUATIONS);
    }
    return situations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Statemachine> getStatemachines()
  {
    if (statemachines == null)
    {
      statemachines = new EObjectContainmentEList<Statemachine>(Statemachine.class, this, CDMLPackage.CDML__STATEMACHINES);
    }
    return statemachines;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Adaptation> getAdaptations()
  {
    if (adaptations == null)
    {
      adaptations = new EObjectContainmentEList<Adaptation>(Adaptation.class, this, CDMLPackage.CDML__ADAPTATIONS);
    }
    return adaptations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CDMLPackage.CDML__CONTEXTS:
        return ((InternalEList<?>)getContexts()).basicRemove(otherEnd, msgs);
      case CDMLPackage.CDML__STATIC_CONTEXTS:
        return ((InternalEList<?>)getStaticContexts()).basicRemove(otherEnd, msgs);
      case CDMLPackage.CDML__SITUATIONS:
        return ((InternalEList<?>)getSituations()).basicRemove(otherEnd, msgs);
      case CDMLPackage.CDML__STATEMACHINES:
        return ((InternalEList<?>)getStatemachines()).basicRemove(otherEnd, msgs);
      case CDMLPackage.CDML__ADAPTATIONS:
        return ((InternalEList<?>)getAdaptations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CDMLPackage.CDML__NAME:
        return getName();
      case CDMLPackage.CDML__CONTEXTS:
        return getContexts();
      case CDMLPackage.CDML__STATIC_CONTEXTS:
        return getStaticContexts();
      case CDMLPackage.CDML__SITUATIONS:
        return getSituations();
      case CDMLPackage.CDML__STATEMACHINES:
        return getStatemachines();
      case CDMLPackage.CDML__ADAPTATIONS:
        return getAdaptations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CDMLPackage.CDML__NAME:
        setName((String)newValue);
        return;
      case CDMLPackage.CDML__CONTEXTS:
        getContexts().clear();
        getContexts().addAll((Collection<? extends Contexts>)newValue);
        return;
      case CDMLPackage.CDML__STATIC_CONTEXTS:
        getStaticContexts().clear();
        getStaticContexts().addAll((Collection<? extends StaticContexts>)newValue);
        return;
      case CDMLPackage.CDML__SITUATIONS:
        getSituations().clear();
        getSituations().addAll((Collection<? extends Situations>)newValue);
        return;
      case CDMLPackage.CDML__STATEMACHINES:
        getStatemachines().clear();
        getStatemachines().addAll((Collection<? extends Statemachine>)newValue);
        return;
      case CDMLPackage.CDML__ADAPTATIONS:
        getAdaptations().clear();
        getAdaptations().addAll((Collection<? extends Adaptation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CDMLPackage.CDML__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CDMLPackage.CDML__CONTEXTS:
        getContexts().clear();
        return;
      case CDMLPackage.CDML__STATIC_CONTEXTS:
        getStaticContexts().clear();
        return;
      case CDMLPackage.CDML__SITUATIONS:
        getSituations().clear();
        return;
      case CDMLPackage.CDML__STATEMACHINES:
        getStatemachines().clear();
        return;
      case CDMLPackage.CDML__ADAPTATIONS:
        getAdaptations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CDMLPackage.CDML__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CDMLPackage.CDML__CONTEXTS:
        return contexts != null && !contexts.isEmpty();
      case CDMLPackage.CDML__STATIC_CONTEXTS:
        return staticContexts != null && !staticContexts.isEmpty();
      case CDMLPackage.CDML__SITUATIONS:
        return situations != null && !situations.isEmpty();
      case CDMLPackage.CDML__STATEMACHINES:
        return statemachines != null && !statemachines.isEmpty();
      case CDMLPackage.CDML__ADAPTATIONS:
        return adaptations != null && !adaptations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //CdmlImpl
