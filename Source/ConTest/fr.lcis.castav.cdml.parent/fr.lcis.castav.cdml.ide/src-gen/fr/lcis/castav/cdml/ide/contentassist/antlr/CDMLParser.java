/*
 * generated by Xtext 2.29.0
 */
package fr.lcis.castav.cdml.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.lcis.castav.cdml.ide.contentassist.antlr.internal.InternalCDMLParser;
import fr.lcis.castav.cdml.services.CDMLGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CDMLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CDMLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CDMLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStateAccess().getAlternatives_0(), "rule__State__Alternatives_0");
			builder.put(grammarAccess.getTransitionAccess().getAlternatives_4(), "rule__Transition__Alternatives_4");
			builder.put(grammarAccess.getPermissionAccess().getAlternatives(), "rule__Permission__Alternatives");
			builder.put(grammarAccess.getDataFlowAccess().getAlternatives(), "rule__DataFlow__Alternatives");
			builder.put(grammarAccess.getParameterAccess().getAlternatives(), "rule__Parameter__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getCdmlAccess().getGroup_0(), "rule__Cdml__Group_0__0");
			builder.put(grammarAccess.getCdmlAccess().getGroup_4(), "rule__Cdml__Group_4__0");
			builder.put(grammarAccess.getContextsAccess().getGroup(), "rule__Contexts__Group__0");
			builder.put(grammarAccess.getContextsAccess().getGroup_3(), "rule__Contexts__Group_3__0");
			builder.put(grammarAccess.getStaticContextsAccess().getGroup(), "rule__StaticContexts__Group__0");
			builder.put(grammarAccess.getStaticContextsAccess().getGroup_4(), "rule__StaticContexts__Group_4__0");
			builder.put(grammarAccess.getStaticContextAccess().getGroup(), "rule__StaticContext__Group__0");
			builder.put(grammarAccess.getSituationsAccess().getGroup(), "rule__Situations__Group__0");
			builder.put(grammarAccess.getSituationsAccess().getGroup_3(), "rule__Situations__Group_3__0");
			builder.put(grammarAccess.getSituationAccess().getGroup(), "rule__Situation__Group__0");
			builder.put(grammarAccess.getStatemachineAccess().getGroup(), "rule__Statemachine__Group__0");
			builder.put(grammarAccess.getStatemachineAccess().getGroup_2(), "rule__Statemachine__Group_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1(), "rule__State__Group_1__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_2(), "rule__State__Group_1_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_2_3(), "rule__State__Group_1_2_3__0");
			builder.put(grammarAccess.getAtomicStateAccess().getGroup(), "rule__AtomicState__Group__0");
			builder.put(grammarAccess.getAtomicStateAccess().getGroup_2(), "rule__AtomicState__Group_2__0");
			builder.put(grammarAccess.getAtomicStateAccess().getGroup_2_2(), "rule__AtomicState__Group_2_2__0");
			builder.put(grammarAccess.getSuperStateAccess().getGroup(), "rule__SuperState__Group__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_2(), "rule__Transition__Group_2__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_4_0(), "rule__Transition__Group_4_0__0");
			builder.put(grammarAccess.getPermissionAccess().getGroup_0(), "rule__Permission__Group_0__0");
			builder.put(grammarAccess.getPermissionAccess().getGroup_0_2(), "rule__Permission__Group_0_2__0");
			builder.put(grammarAccess.getPermissionAccess().getGroup_1(), "rule__Permission__Group_1__0");
			builder.put(grammarAccess.getPermissionAccess().getGroup_1_2(), "rule__Permission__Group_1_2__0");
			builder.put(grammarAccess.getSinkAccess().getGroup(), "rule__Sink__Group__0");
			builder.put(grammarAccess.getSinkAccess().getGroup_3(), "rule__Sink__Group_3__0");
			builder.put(grammarAccess.getSinkAccess().getGroup_3_1(), "rule__Sink__Group_3_1__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_2(), "rule__Parameter__Group_2__0");
			builder.put(grammarAccess.getSourceAccess().getGroup(), "rule__Source__Group__0");
			builder.put(grammarAccess.getAdaptationAccess().getGroup(), "rule__Adaptation__Group__0");
			builder.put(grammarAccess.getAdaptationAccess().getGroup_3(), "rule__Adaptation__Group_3__0");
			builder.put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
			builder.put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
			builder.put(grammarAccess.getCdmlAccess().getNameAssignment_0_1(), "rule__Cdml__NameAssignment_0_1");
			builder.put(grammarAccess.getCdmlAccess().getContextsAssignment_0_3(), "rule__Cdml__ContextsAssignment_0_3");
			builder.put(grammarAccess.getCdmlAccess().getStaticContextsAssignment_1(), "rule__Cdml__StaticContextsAssignment_1");
			builder.put(grammarAccess.getCdmlAccess().getSituationsAssignment_2(), "rule__Cdml__SituationsAssignment_2");
			builder.put(grammarAccess.getCdmlAccess().getStatemachinesAssignment_3(), "rule__Cdml__StatemachinesAssignment_3");
			builder.put(grammarAccess.getCdmlAccess().getAdaptationsAssignment_4_0(), "rule__Cdml__AdaptationsAssignment_4_0");
			builder.put(grammarAccess.getContextsAccess().getContextsAssignment_2(), "rule__Contexts__ContextsAssignment_2");
			builder.put(grammarAccess.getContextsAccess().getContextsAssignment_3_1(), "rule__Contexts__ContextsAssignment_3_1");
			builder.put(grammarAccess.getContextAccess().getNameAssignment(), "rule__Context__NameAssignment");
			builder.put(grammarAccess.getStaticContextsAccess().getStaticContextsAssignment_3(), "rule__StaticContexts__StaticContextsAssignment_3");
			builder.put(grammarAccess.getStaticContextsAccess().getStaticContextsAssignment_4_1(), "rule__StaticContexts__StaticContextsAssignment_4_1");
			builder.put(grammarAccess.getStaticContextAccess().getNameAssignment_0(), "rule__StaticContext__NameAssignment_0");
			builder.put(grammarAccess.getStaticContextAccess().getValueAssignment_2(), "rule__StaticContext__ValueAssignment_2");
			builder.put(grammarAccess.getSituationsAccess().getSituationsAssignment_2(), "rule__Situations__SituationsAssignment_2");
			builder.put(grammarAccess.getSituationsAccess().getSituationsAssignment_3_1(), "rule__Situations__SituationsAssignment_3_1");
			builder.put(grammarAccess.getSituationAccess().getNameAssignment_0(), "rule__Situation__NameAssignment_0");
			builder.put(grammarAccess.getSituationAccess().getContextAssignment_2(), "rule__Situation__ContextAssignment_2");
			builder.put(grammarAccess.getStatemachineAccess().getNameAssignment_1(), "rule__Statemachine__NameAssignment_1");
			builder.put(grammarAccess.getStatemachineAccess().getExportedAssignment_2_0(), "rule__Statemachine__ExportedAssignment_2_0");
			builder.put(grammarAccess.getStatemachineAccess().getPermissionAssignment_2_1(), "rule__Statemachine__PermissionAssignment_2_1");
			builder.put(grammarAccess.getStatemachineAccess().getStatesAssignment_4(), "rule__Statemachine__StatesAssignment_4");
			builder.put(grammarAccess.getStateAccess().getTransitionsAssignment_1_1(), "rule__State__TransitionsAssignment_1_1");
			builder.put(grammarAccess.getStateAccess().getDataflowsAssignment_1_2_2(), "rule__State__DataflowsAssignment_1_2_2");
			builder.put(grammarAccess.getStateAccess().getDataflowsAssignment_1_2_3_1(), "rule__State__DataflowsAssignment_1_2_3_1");
			builder.put(grammarAccess.getAtomicStateAccess().getNameAssignment_1(), "rule__AtomicState__NameAssignment_1");
			builder.put(grammarAccess.getAtomicStateAccess().getContextAwareAssignment_2_0(), "rule__AtomicState__ContextAwareAssignment_2_0");
			builder.put(grammarAccess.getAtomicStateAccess().getContextsAssignment_2_1(), "rule__AtomicState__ContextsAssignment_2_1");
			builder.put(grammarAccess.getAtomicStateAccess().getContextsAssignment_2_2_1(), "rule__AtomicState__ContextsAssignment_2_2_1");
			builder.put(grammarAccess.getSuperStateAccess().getNameAssignment_2(), "rule__SuperState__NameAssignment_2");
			builder.put(grammarAccess.getSuperStateAccess().getAbstractsAssignment_4(), "rule__SuperState__AbstractsAssignment_4");
			builder.put(grammarAccess.getTransitionAccess().getOnAssignment_2_1(), "rule__Transition__OnAssignment_2_1");
			builder.put(grammarAccess.getTransitionAccess().getExternalAssignment_4_0_0(), "rule__Transition__ExternalAssignment_4_0_0");
			builder.put(grammarAccess.getTransitionAccess().getTargetAssignment_4_0_1(), "rule__Transition__TargetAssignment_4_0_1");
			builder.put(grammarAccess.getTransitionAccess().getTargetAssignment_4_1(), "rule__Transition__TargetAssignment_4_1");
			builder.put(grammarAccess.getEventAccess().getNameAssignment(), "rule__Event__NameAssignment");
			builder.put(grammarAccess.getPermissionAccess().getNormalAssignment_0_0(), "rule__Permission__NormalAssignment_0_0");
			builder.put(grammarAccess.getPermissionAccess().getPermissionValuesAssignment_0_1(), "rule__Permission__PermissionValuesAssignment_0_1");
			builder.put(grammarAccess.getPermissionAccess().getPermissionValuesAssignment_0_2_1(), "rule__Permission__PermissionValuesAssignment_0_2_1");
			builder.put(grammarAccess.getPermissionAccess().getDangerousAssignment_1_0(), "rule__Permission__DangerousAssignment_1_0");
			builder.put(grammarAccess.getPermissionAccess().getPermissionValuesAssignment_1_1(), "rule__Permission__PermissionValuesAssignment_1_1");
			builder.put(grammarAccess.getPermissionAccess().getPermissionValuesAssignment_1_2_1(), "rule__Permission__PermissionValuesAssignment_1_2_1");
			builder.put(grammarAccess.getPermissionAccess().getSignatureAssignment_2(), "rule__Permission__SignatureAssignment_2");
			builder.put(grammarAccess.getPermissionAccess().getSignatureOrSystemAssignment_3(), "rule__Permission__SignatureOrSystemAssignment_3");
			builder.put(grammarAccess.getPermissionValueAccess().getNameAssignment(), "rule__PermissionValue__NameAssignment");
			builder.put(grammarAccess.getSinkAccess().getNameAssignment_1(), "rule__Sink__NameAssignment_1");
			builder.put(grammarAccess.getSinkAccess().getParametersAssignment_3_0(), "rule__Sink__ParametersAssignment_3_0");
			builder.put(grammarAccess.getSinkAccess().getParametersAssignment_3_1_1(), "rule__Sink__ParametersAssignment_3_1_1");
			builder.put(grammarAccess.getParameterAccess().getWildcardAssignment_0(), "rule__Parameter__WildcardAssignment_0");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_1(), "rule__Parameter__ValueAssignment_1");
			builder.put(grammarAccess.getParameterAccess().getSourceAssignment_2_0(), "rule__Parameter__SourceAssignment_2_0");
			builder.put(grammarAccess.getParameterAccess().getOriginAssignment_2_1(), "rule__Parameter__OriginAssignment_2_1");
			builder.put(grammarAccess.getSourceAccess().getInputAssignment_0(), "rule__Source__InputAssignment_0");
			builder.put(grammarAccess.getSourceAccess().getNameAssignment_2(), "rule__Source__NameAssignment_2");
			builder.put(grammarAccess.getAdaptationAccess().getSituationsAssignment_2(), "rule__Adaptation__SituationsAssignment_2");
			builder.put(grammarAccess.getAdaptationAccess().getSituationsAssignment_3_1(), "rule__Adaptation__SituationsAssignment_3_1");
			builder.put(grammarAccess.getAdaptationAccess().getStateAssignment_5(), "rule__Adaptation__StateAssignment_5");
			builder.put(grammarAccess.getAdaptationAccess().getStatesAssignment_7(), "rule__Adaptation__StatesAssignment_7");
			builder.put(grammarAccess.getCdmlAccess().getUnorderedGroup(), "rule__Cdml__UnorderedGroup");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CDMLGrammarAccess grammarAccess;

	@Override
	protected InternalCDMLParser createParser() {
		InternalCDMLParser result = new InternalCDMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CDMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CDMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
