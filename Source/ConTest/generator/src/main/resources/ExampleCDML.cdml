model TranslationApp {
	
	contexts {
		INTERNET_CONNECTIVITY
	}
	
	static contexts {
		minSdk = "26",
		maxSdk = "",
		targetSdk = "32"
	}
	
	situations {
		INTERNET_DISCONNECTED : INTERNET_CONNECTIVITY,
		INTERNET_SLOW : INTERNET_CONNECTIVITY
	}
	
	statemachine ABSTRACT_SM {
		state START {
			transition on APP_STARTED -> SEND_MESSAGE_ACTIVITY
		}
		
		super state SEND_MESSAGE_ACTIVITY abstracts SEND_MESSAGE_ACTIVITY_SM {
			transition on TERMINATE_BUTTON_CLICKED -> EXIT
			transition on SUCCESS -> HANDLE_SUCCESS
		}

		state HANDLE_SUCCESS {
			transition on BACK_BUTTON_CLICKED -> SEND_MESSAGE_ACTIVITY
            (*@\textcolor{BrickRed}{dataflows \{}@*)
                (*@\textcolor{BrickRed}{source internet\_status} @*)
            (*@\textcolor{BrickRed}{\}}@*)
		}

 		state EXIT
	}
	
	statemachine SEND_MESSAGE_ACTIVITY_SM exported {
		state SEND_MESSAGE awareof INTERNET_CONNECTIVITY {
			transition on SEND_MESSAGE_CLICKED -> SHOW_ANSWER
            (*@\textcolor{BrickRed}{dataflows \{}@*)                                                       
                (*@\textcolor{BrickRed}{sink "log.d" ( source ABSTRACT\_SM.START.internet\_status )} @*)   
            (*@\textcolor{BrickRed}{\}}@*)                                                                 
		}

		state SHOW_ANSWER
	}
	
	adaptation for INTERNET_DISCONNECTED at SEND_MESSAGE {
		state SEND_MESSAGE {
			transition on SEND_MESSAGE_CLICKED -> HANDLE_ERROR
		}
		
		state HANDLE_ERROR{
			transition on BACK_BUTTON_PRESSED -> external SEND_MESSAGE_ACTIVITY_SM.SEND_MESSAGE	
		}
	}
}
	
